if (!self.define) { const e = e => { "require" !== e && (e += ".js"); let r = Promise.resolve(); return i[e] || (r = new Promise(async r => { if ("document" in self) { const i = document.createElement("script"); i.src = e, document.head.appendChild(i), i.onload = r } else importScripts(e), r() })), r.then(() => { if (!i[e]) throw new Error(`Module ${e} didnâ€™t register its module`); return i[e] }) }, r = (r, i) => { Promise.all(r.map(e)).then(e => i(1 === e.length ? e[0] : e)) }, i = { require: Promise.resolve(r) }; self.define = (r, s, o) => { i[r] || (i[r] = Promise.resolve().then(() => { let i = {}; const t = { uri: location.origin + r.slice(1) }; return Promise.all(s.map(r => { switch (r) { case "exports": return i; case "module": return t; default: return e(r) } })).then(e => { const r = o(...e); return i.default || (i.default = r), i }) })) } } define("./service-worker.js", ["./workbox-468c4d03"], (function (e) { "use strict"; e.skipWaiting(), e.clientsClaim(), e.precacheAndRoute([{ url: "./index.html", revision: "835b030a29e29b206fd2d6a4dd65de87" }, { url: "main.css", revision: "9e648db806920b2f8a8a9af3aa5f2fe0" }, { url: "main.js", revision: "6117aa0d2b1bcf6ce54165832eded718" }, { url: "public/google-trips.svg", revision: "e8b7fedf2771fd8168871a3395d495b4" }], {}) }));
